# Production Docker Compose for X-Fleet Application
# This matches the successful deployment configuration

services:
  nestjs-app:
    image: princeagra21/x-fleet:latest
    container_name: x-fleet-app
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "80:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      # Primary Database
      - PRIMARY_DB_HOST=postgres-db
      - PRIMARY_DB_USER=postgres
      - PRIMARY_DB_PORT=5432
      - PRIMARY_DB_PASSWORD=Stack@321
      - PRIMARY_DB_NAME=FleetStack_db
      - PRIMARY_DATABASE_URL=postgresql://postgres:Stack@321@postgres-db:5432/FleetStack_db?schema=public
      # Logs Database  
      - LOGS_DB_HOST=postgres-db
      - LOGS_DB_USER=postgres
      - LOGS_DB_PORT=5432
      - LOGS_DB_PASSWORD=Stack@321
      - LOGS_DB_NAME=FleetStack_logs
      - LOGS_DATABASE_URL=postgresql://postgres:Stack@321@postgres-db:5432/FleetStack_logs?schema=public
      # Address Database
      - ADDRESS_DB_HOST=postgres-db
      - ADDRESS_DB_USER=postgres
      - ADDRESS_DB_PORT=5432
      - ADDRESS_DB_PASSWORD=Stack@321
      - ADDRESS_DB_NAME=FleetStack_Address
      - ADDRESS_DATABASE_URL=postgresql://postgres:Stack@321@postgres-db:5432/FleetStack_Address?schema=public
      # Default Database URL
      - DATABASE_URL=postgresql://postgres:Stack@321@postgres-db:5432/FleetStack_db?schema=public
    depends_on:
      - postgres-db

  postgres-db:
    image: postgres:15-alpine
    container_name: x-fleet-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Stack@321
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
